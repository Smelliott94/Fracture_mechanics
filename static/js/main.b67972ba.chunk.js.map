{"version":3,"sources":["Form.js","SurfacePlot.js","App.js","index.js"],"names":["Form","props","handleChange","event","target","name","value","parseFloat","setState","initialState","R","a","sigma_yield","state","this","type","onChange","Button","variant","color","onClick","e","submitFormData","React","Component","Surfaceplot","initstate","getMesh","size","theta","r","data","i","length","_theta","Math","PI","push","_r","x","y","z","forEach","j","round","cos","sin","mode","nextProps","id","App","childstate","console","log","sigma_o","sigma_1","sigma_2","sigma_3","E","nu","X","Y","Z","SurfacePlot","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b67972ba.chunk.js","sourcesContent":["import React from 'react'\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass Form extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.initialState = {\r\n      R: 0.03 / 2,\r\n      a: 0.03 / 2,\r\n      sigma_yield: 350, // MPa (Yield Stress)\r\n    }\r\n\r\n    this.state = this.initialState\r\n  }\r\n\r\n  handleChange = event => {\r\n    let { name, value } = event.target\r\n    value = parseFloat(value)\r\n    this.setState({\r\n      [name]: value,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { R, a, sigma_yield } = this.state\r\n\r\n    return (\r\n    <form>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>R</th>\r\n            <th>a</th>\r\n            <th>&sigma;<sub>yield</sub></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>\r\n              <input\r\n              type=\"number\"\r\n              name=\"R\"\r\n              value={R}\r\n              onChange={this.handleChange} />\r\n            </td>\r\n            <td>\r\n              <input\r\n              type=\"number\"\r\n              name=\"a\"\r\n              value={a}\r\n              onChange={this.handleChange} />\r\n            </td>\r\n            <td>\r\n              <input\r\n              type=\"number\"\r\n              name=\"sigma_yield\"\r\n              value={sigma_yield}\r\n              onChange={this.handleChange} />\r\n            \r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={(e) => this.props.submitFormData(e, this.state)}>\r\n        SUBMIT\r\n      </Button>\r\n    </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form","import React from 'react'\r\nimport Plot from 'react-plotly.js'\r\n\r\nclass Surfaceplot extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.initstate = this.getMesh(100)\r\n    this.state = this.initstate\r\n  }\r\n\r\n  getMesh(size) {\r\n    const theta = []\r\n    const r = []\r\n    const { a } = this.props.data\r\n\r\n    for(let i=0;i<=size;i++){\r\n      if (theta.length === 0) {\r\n        var _theta = -Math.PI\r\n      }\r\n      theta.push(_theta)\r\n      _theta = _theta + 2*Math.PI / size\r\n\r\n    }\r\n\r\n    for(let i=0;i<=size;i++){\r\n      if (r.length === 0) {\r\n        var _r = 0\r\n      }\r\n      r.push(_r)\r\n      _r = _r + (a / 10) / size\r\n    }\r\n\r\n    const x = []\r\n    const y = []\r\n    const z = []\r\n\r\n    r.forEach((j, i) => {\r\n      x.push(Math.round(j*Math.cos(theta[i])*1000000)/1000000)\r\n      y.push(Math.round(j*Math.sin(theta[i])*1000000)/1000000)\r\n    })\r\n\r\n    x.forEach((x, i) => {\r\n      z.push()\r\n    })\r\n\r\n    var data = {\r\n        x: x,\r\n        y: y, \r\n        mode: 'markers',\r\n        type: 'scatter'\r\n    }\r\n\r\n    return data\r\n        \r\n  }\r\n\r\n  componentDidUpdate(nextProps) {\r\n    const { data } = this.props\r\n    if (nextProps.data !== data) {\r\n      this.setState(this.getMesh(100))\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // const { R, a } = this.props.data\r\n    return (\r\n    <div id=\"plot\">\r\n      <Plot data={[this.state]} />\r\n    </div>)\r\n  }\r\n}\r\n\r\nexport default Surfaceplot","import React from 'react'\nimport Form from './Form'\nimport SurfacePlot from './SurfacePlot'\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      R: 0.03 / 2,\n      a: 0.03 / 2,\n      sigma_yield: 350,\n      sigma_o: 100, // MPa (Remote Stress)\n      sigma_1: 0,\n      sigma_2: 0,\n      sigma_3: 0, //Initially 0 for plane stress\n      E: 72400, // MPa (Young's Modulus)\n      nu: 0.3, // Poisson's Ratio\n      //Stress field Contour xyz\n      X: 0,\n      Y: 0,\n      Z: 0,\n    }\n  }\n\n  submitFormData = (e, childstate) => {\n    // Update the app state with the new values from the form\n    console.log(childstate)\n    this.setState(childstate)\n  }\n\n  render() {\n    return (\n      <div>\n        <Form submitFormData={ this.submitFormData } />\n        <SurfacePlot data={ this.state } />\n      </div>\n    )\n  }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\";\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}